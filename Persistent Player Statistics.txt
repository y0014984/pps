Persistent Player Statistics von y0014984
============================================

Ziel
-----
Erfassen von Spielerstatisitiken in COOP MilSim-Missionen eines Servers, um die Qualität des Spielers zu 
ermitteln, über die Anzahl der Kills hinaus. So können im Clan z.B. Abzeichen oder Ränge auf Basis objektiver 
Daten vergeben werden.

Geschwindigkeiten bei 30 kg Gepäck
-----------------------------------------
Stehend gehen 5
Stehend laufen 12
Stehend sprinten 18

geduckt gehen 4
geduckt laufen 11.5
geduckt sprinten 17

liegend gehen 2.25
liegend laufen 2.75
liegend sprinten 4.8

Anpassungen zum Release
--------------------------
- Letzte Werte und Trigger, wie geplant:
	- [A3] isBleeding/isBurning player; (isBleeding scheint mit ACE nicht zu funktionieren)
	- [ACE] [player] call ace_medical_blood_fnc_isBleeding (BOOL)
	- [ACE] [player] call ace_medical_treatment_fnc_isMedic (BOOL)
	- damage player; //0=healthy 1=dead --> injuredNone injuredLow injuredMed injuredHigh injuredFull
	- Hit auch wenn man selbst getroffen wurde
	- Count Respawn
	- Count Killed Animals
	- Count JIP (didJIP kann vermutlich nur für einen JIP genutzt werden)
	- Durchschnittlicher Ping
	- Interessante Event Handler (Engine, Respawn/MPRespawn)
	- Interessante Mission Event Handler (Map, PlayerConnected, PlayerDisconnected, PlayerViewChanged)

Testing
------------
- Prüfung: Komplett neue Spieler; Hier mal while Schleife wegen hinzufügen 
- JIP testen; Der bekommt z.B. keine Events eingetragen
- Logs auf Fehlermeldungen prüfen
- Windows VM auf Mac einrichten (dann könnte ich zumindest die Arma Tools verwenden zum packen, vielleicht auch in Arma testen)

Release v0.2.3
-------------
- Binarize für die PBO funktioniert gerade nicht (Pfade)
- Version anpassen (mit 0.5.0 Beta starten oder so)
- Test Keybind entfernen
- PPS_AllowSendingData auf Default false setzen
- PPS_Logging auf Default false setzen
- Logging deaktivieren
- Admin Debugging Console deaktivieren
- Dokumentation erstellen
- Code Review: Redundanzen, unnötige Variablen, zu häufige Variablenerfassungen, Vereinheitlichung Variablennamen etc.
- Final Build mit Binarize Option
- welche Lizenz für den Content?
- Logo überarbeiten in Hinblick auf PPE
- Screenshots erstellen
- bei GitHub veröffentlichen
- im Steam Workshop veröffentlichen

Release v0.4.2
-------------
- Umbau der pps-player-uid Aufbaus
	- sections sollten die einzelnen keys sein = _timeMapVisible
	- Darunter finden sich dann immer gleich _key, _value, _type ("interval","event","meta"), _outputString, _outputType, _outputKey2, _outputKey3 etc.
	- Dann benötigt der Server keine Info darüber, welche Werte es gibt und kann einfach mit getSections alles lesen
	- Auch die Lokalisierung wird dann einfacher, wenn in der DB nur der _key für die stringtable vermerkt wird
- Die Ace Event Handler für Cargo und Unconscious sind doch nicht Unit-Spezifisch, oder? Da muss man noch mal trennen, was wirklich eine Person ausgelöst hat
- Erweiterbare Statistiken außerhalb des Mods durch benutzerdefinierte Funktion/EventHandler
- Interface für Admin, um z.B. Ränge zu setzen oder Strafen zu verleihen bzw. auch als Sani, Arzt oder Techniker, Wiederhersteller auszubilden
- CSV Export Button
- Bei Sani- und Machaniker: Die erfolgten Ausbildungen speichern; Dann werden sie als Sani/Machaniker hinterlegt; Wenn sie dann z.B. 10 Std. nicht mehr in der Rolle spielen wird der Wert entzogen
- Statistische und grafische Auswertungen
- Zeitliche Entwicklung über mehrere Events abbilden (pps-player-[playerUID]-[eventID].ini als Dateien anlegen)
- Umstellen bei Interval Statistics, dass der Client an den Server bereits den Key und den Namen und den Typ übergibt (Dann sind die Funktionen auf Seiten des Servers deutlich schlanker)
- Lokalisierung ermöglichen über Stringtable
- Testen ob man sich in Deckung befindet über die Frage ob Büsche oder harte Deckung in der Nähe sind (max 1m entfernt)
- Umsortieren: Player und Statistics (gehighlighted nach oben ???)
- Den roten Admin und den roten Tracking Wert evtl. ganz nach oben sortieren
- Den roten Admin und den roten Tracking Wert evtl. nur den drangehängten Text einfärben und nicht die gesamte Zeile
- Berücksichtigen bei Key Down Event Handler zum Schließen des Dialogs, dass es mehr als einen DIK-Code geben kann
- Event Statistics, wenn sie leer sind, zu beginn auf 0 setzen beim player
- Clan/Unit NAmen ermitteln und mit beim Player und beim Event speichern
- Umbau der Event-Getriggerten Daten zu Time erfassten Daten über Speichern lokal Anfang und Ende und bei Ende dann Differenz speichern, dann zusätzlich die Häufigkeit speichern (Dann lässt sich Durchschnitt bilden)
- Beim Logging ermöglichen, dass über CBA Settings gewählt wird zwischen systemChat/hint/rpt (Oder alle 3 gleichzeitig möglich machen)
- Werte:
	- Benutzt Drohne/Mörser/Geschütz/MG
	- [A3] Füllstand Tank, siehe Füllstand Magazin
	- [A3] Beschädigungszustand Fahrzeug
	- [A3] currentChannel (Global, side, etc.)
	- [A3] _muzzle = currentMuzzle player;
	- [A3] _wsPlayer = weaponState player; 
	- [A3] _weaponClass = currentWeapon player;
	- [A3] _ct = currentThrowable player; 
	- [A3] _weaponMode = currentWeaponMode player;
	- [A3] _zeroing = currentZeroing player;
	- [A3] VehicleSensors
			(((vehicle player) isVehicleSensorEnabled "IRSensorComponent") select 0) select 1
			Beispiel für Sensoren, ermittelt mit: listVehicleSensors (vehicle player);
			[
				["IRSensorComponent","IRSensorComponent"],
				["VisualSensorComponent","VisualSensorComponent"],
				["AntiRadiationSensorComponent","PassiveRadarSensorComponent"],
				["PassiveRadarSensorComponent","PassiveRadarSensorComponent"],
				["LaserSensorComponent","LaserSensorComponent"],
				["NVSensorComponent","NVSensorComponent"]
			]
	- [A3] Radbremse, Schwebflug, Nachbrenner, Landeklappen, AutoTrimmung
	- [ACE] Stamina
	- [ACE] Ist verletzt
	- [ACE] Ist Sanitäter
	- [ACE] Ist Arzt
	- [ACE] Ist Mechaniker
	- [ACE] Ist Instandhalter
	- [ACE] Heilt einen Mitspieler
	- [ACE] Repariert ein Fahrzeug
	- [ACE] Magazine Repack
	- [ACE] Arsenal
	- [bob] call ace_medical_status_fnc_isBeingCarried (BOOL)
	- [bob] call ace_medical_status_fnc_isBeingDragged (BOOL)
	- [player] call ace_medical_status_fnc_hasStableVitals (BOOL)
	- [player] call ace_medical_status_fnc_isInStableCondition (BOOL)
	- [player] call ace_medical_status_fnc_getBloodLoss (NUMBER)
	- [player] call ace_medical_status_fnc_getBloodPressure (NUMBER 0=Low und 1^=High)
	- [player] call ace_medical_treatment_fnc_getTriageStatus
	 * Triage info <ARRAY>
	 *  0: Status ID <NUMBER>
	 *  1: Name <STRING>
	 *  2: Color <ARRAY>
	 *  3: Text color <ARRAY>
	- [player, "leftleg"] call ace_medical_treatment_fnc_hasTourniquetAppliedTo (BOOL)
	- [player] call ace_medical_treatment_fnc_isInMedicalFacility (BOOL)
	- [player] call ace_medical_treatment_fnc_isInMedicalVehicle (BOOL)

Release v0.8.15
-------------
...

Release v1.0
-------------
...

Probleme, Bugs
-------------------
- Das CBA KEybind hat zwar einen Default-Wert, der wird aber nicht automatisch gesetzt. Wie machen das Andere
- zoomTemp funktioniert nur auf normaler Taste, aber nicht auf "Sek. Maustaste halten"
- Slider in der Listbox unsichtbar aber existent
- DB-Status nicht ganz korrekt, da unknown aus Template stehen bleibt (Anderer Servercode darf ohne DB nicht laufen) --> diag_log einbauen zum testen
- Boat, Truck und Motorcycle ohne passende Funktion/Fahrzeuge
- Der Geschwindigkeitsmodus der Einheit lässt sich nur indirekt über die Geschwindigkeit ermitteln
- Wenn in der Mission eingestellt ist, dass "respawnOnStart = 1;" dann löst das gleich zu Beginn quasi einen Suicide aus (Suicide +1, Kill +1, Death +1)
- KeyUp Gear mit 0.5 funktioniert nur, wenn mit I wieder geschlossen wird, bei ESC bleibt 0.5 stehen (Es gibt noch weitere Beispiele)
- Was ist bei z.B. Engine Toggle, dass man auch durch vorwärts fahren oder Click Menü aktivieren kann (gilt auch für reload) --> geht nur auf dedizierter Taste